<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- 
        mybatis可以使用properties来引入外部properties配置文件的内容
     -->
     <properties resource="dbconfig.properties">
     </properties>
     
     <!-- 
        setting包含很多重要的配置
      -->
      <settings>
        <!-- 是否开启自动驼峰命名规则（camel case）映射，
                                        即从经典数据库列名 A_COLUMN 到
                                        经典 Java 属性名 aColumn 的类似映射。 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        
        <!-- 开启二级缓存 -->
        <setting name="cacheEnabled" value="true"/>
      </settings>
      
     <!-- 
        typeAliases:类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，
                                                            存在的意义仅在于用来减少类完全限定名的冗余。
        type:指定要配置别名的类，alias不配置时，默认值为类名小写，否则取alias的值。
                        别名本身是不区分大小写的。
        
                                                            
      --> 
      <typeAliases>
        <typeAlias alias="Employee" type="com.du.mybatis.bean.Employee"/>
        
        <!-- 
                            批量起别名。
                            包含子包同时存在同名类时可能会报错，需要使用@Alias("author")注解，在其中一个上进行区分。
         -->
        <package name="com.du.mybatis.bean"/>
        
      </typeAliases>
      <!-- 
      databaseIdProvider支持多数据库厂商 
      type="DB_VENDOR"：作用，得到数据库厂商标识，mybatis根据厂商标识执行不同的sql
      
      -->
     
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
		
		<!-- 同时配置多个数据库 -->
		<!-- 配置oracle数据 -->
		<!-- <environment id="dev_oracle">
            <transactionManager type="JDBC" />
            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}" />
                <property name="url" value="${orcl.url}" />
                <property name="username" value="${orcl.username}" />
                <property name="password" value="${orcl.password}" />
            </dataSource>
        </environment> -->
		
	</environments>
	
	
     <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同数据库起别名 ,另外需要在Mapper，xml文件中配置databaseId，告诉该SQL属于哪个数据库-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
     </databaseIdProvider>
     
     
	<!-- 将我们写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中 -->
	<mappers>
	    <!-- 
	       mapper:注册一个sql映射
	       resource：引用类路径下的sql映射文件
	       url：应用网络路径或磁盘路径下的sql映射文件
	       class：引用（注册）接口
	                   归定：用途1、接口和映射文件同名，并且在同一目录才可以，
	                               用途2、注解方式的可以使用此配置
	      package:批量注册，要求接口和映射文件同名，并且在同一目录才可以
	       
	    -->
		<mapper resource="mapper/EmployeeMapper.xml" />
		<mapper resource="mapper/EmployeeMapperPlus.xml"/>
		<mapper resource="mapper/DepartmentMapper.xml"/>
		<mapper resource="mapper/EmployeeDynamicSqlMapper.xml"/>		
		<mapper class="com.du.mybatis.dao.EmployeeMapperAnnotation"/>
	</mappers>
</configuration>